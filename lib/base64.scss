@import "bitwise";
@import "charcode";

$base64chars: ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/');

@function base64-encode($s) {
  $r: '';
  $p: '';
  $c: (str-length($s) % 3);

  @if ($c > 0) { 
    @while ($c < 3) { 
      $p: $p + '='; 
      $s: $s + ' '; 
      $c: $c + 1;
    } 
  }

  $c: 0;

  @while ($c < str-length($s)) {
    $n: bitwise(char-code-at($s, $c) '<<' 16)
      + bitwise(char-code-at($s, $c + 1) '<<' 8)
      + char-code-at($s, $c + 2);

    $r: $r
      + nth($base64chars, bitwise(bitwise($n '>>' 18) '&' 63) + 1)
      + nth($base64chars, bitwise(bitwise($n '>>' 12) '&' 63) + 1)
      + nth($base64chars, bitwise(bitwise($n '>>'  6) '&' 63) + 1)
      + nth($base64chars, bitwise($n '&' 63) + 1);
    $c: $c + 3;
  }


  @return $r; // Padding isnâ€™t working :(
}
